{%- set influxdb_host = salt['pillar.get']('detector:influxdb:host', 'localhost') %}
{%- set influxdb_port = salt['pillar.get']('detector:influxdb:port', '8086') %}
{%- set influxdb_user = salt['pillar.get']('detector:influxdb:user', 'telegraf') %}
{%- set influxdb_pass = salt['pillar.get']('detector:influxdb:pass', 'telegraf') %}
{%- set influxdb_proto = salt['pillar.get']('detector:influxdb:proto', 'http') %}

[[outputs.influxdb]]
  ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
  ## Multiple urls can be specified as part of the same cluster,
  ## this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = ["{{ influxdb_proto }}://{{ influxdb_host }}:{{ influxdb_port }}"] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "telegraf" # required

  ## Retention policy to write to. Empty string writes to the default rp.
  retention_policy = ""
  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
  write_consistency = "any"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "5s"
  username = "{{ influxdb_user }}"
  password = "{{ influxdb_pass }}"
  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
  # user_agent = "telegraf"
  ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  # udp_payload = 512

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  #insecure_skip_verify = true
