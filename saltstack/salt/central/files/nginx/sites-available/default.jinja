
server {
        listen {{ salt['grains.get']('ipv4')[0] }}:5000 default_server ssl;

        root /var/www/html;

        # Let's Encrypt is not happy about this during renewal. Therefore commenting out
        #server_name {{ grains['fqdn'] }} {{ grains['host'] }}.{{ grains['domain'].split('.')[1:]|join('.') }};

	# SSL configuration. Let's Encrypt
	ssl_certificate /etc/letsencrypt/live/{{ grains['fqdn'] }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ grains['fqdn'] }}/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;
	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security max-age=15768000;

	location /api {
		proxy_pass http://127.0.0.1:5000;
	}
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;

	server_name {{ grains['fqdn'] }} {{ grains['host'] }}.{{ grains['domain'].split('.')[1:]|join('.') }};

	error_page 404 502 503 500 /404.html;
	location = /404.html {
		root /etc/nginx/404;
		internal;
	}

	location / {
		return 301 https://$host$request_uri;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	root /var/www/html;

	server_name _;

	error_page 404 502 503 500 /404.html;
	location = /404.html {
		root /etc/nginx/404;
		internal;
	}

	# SSL configuration. Let's Encrypt
	ssl_certificate /etc/letsencrypt/live/{{ grains['fqdn'] }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ grains['fqdn'] }}/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;
	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security max-age=15768000;

	# Security settings
	add_header X-Frame-Options SAMEORIGIN;
	# nosniff breaks stuff
	#add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
	proxy_cookie_path / "/; secure; HttpOnly";
	add_header X-Robots-Tag none;

	auth_basic "Detector";
	auth_basic_user_file /etc/nginx/.htpasswd;

	location /netdata {
		rewrite /[^\/]+(.*) $1  break;
		proxy_pass http://127.0.0.1:19999;
	}

	location /evebox {
		rewrite /[^\/]+(.*) $1  break;
		proxy_pass http://127.0.0.1:5636;
	}

	location /kibana {
		rewrite /[^\/]+(.*) $1  break;
		proxy_pass http://127.0.0.1:5601;
	}

	location /grafana {
		rewrite /[^\/]+(.*) $1  break;
		proxy_pass http://127.0.0.1:3000;
	}

	location /moloch {
		rewrite /[^\/]+(.*) $1  break;
		proxy_pass http://127.0.0.1:8005;
		satisfy any;
		allow all;
	}

	location /api {
		proxy_pass http://127.0.0.1:5000;
	}

	location /nfsen {
		alias /var/www/nfsen;

		index nfsen.php;
		try_files $uri $uri/ =404;

		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			fastcgi_param SCRIPT_FILENAME /var/www/$fastcgi_script_name;
			fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		}
	}

	location / {
		proxy_pass http://127.0.0.1:5001;
		proxy_set_header x-remote-user $remote_user;
	}
}
